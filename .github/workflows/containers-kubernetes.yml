name: Deploy containers to Kubernetes

on:
  push:
    branches:
      - main
    # TODO match on regex instead
    paths:
      - pwn/**
      - web/**
  workflow_dispatch:

jobs:
  main:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - uses: actions/checkout@eef61447b9ff4aafe5dcd4e0bbf5d482be7e7871 # v4.2.1

      - uses: actions/setup-python@f677139bbe7f9c59b41e40162b753c062f5d49a3 # v5.2.0
        with:
          python-version: 3.x
          cache: pip

      - name: Setup ctfcli
        run: |
          pip install -r requirements.txt
          ctf plugins install https://github.com/pl4nty/ctfcli-deploy-kubernetes.git

          curl -L https://github.com/kubernetes/kompose/releases/download/v1.32.0/kompose-linux-amd64 -o kompose
          chmod +x kompose
          sudo mv ./kompose /usr/local/bin/kompose
          echo "${{ secrets.KUBE_CONFIG }}" > $HOME/.kube/config

          mkdir .ctf
          cat <<EOF > .ctf/config
          [config]
          url = https://${{ vars.CTFD_DOMAIN }}
          access_token = ${{ secrets.CTFD_TOKEN }}

          [cookies]
          site_password = ${{ secrets.CTFD_SITE_PASSWORD }}

          [challenges]
          EOF

          shopt -s extglob
          for chal in ?(pwn|web)/*/; do
            echo "$chal = $chal" >> .ctf/config
          done

      # TODO add buildx support to ctfcli
      # https://github.com/jpribyl/action-docker-layer-caching/issues/38
      - name: Setup Docker cache
        uses: jpribyl/action-docker-layer-caching@c632825d12ec837065f49726ea27ddd40bcc7894 # v0.1.1
        with:
          key: docker-layer-cache-{hash}
          restore-keys: |
            docker-layer-cache-
            layer-docker-layer-cache-

      - name: Setup container registry
        uses: docker/login-action@9780b0c442fbb1117ed29e0efdff1e18412f7567 # v3.3.0
        with:
          registry: ${{ vars.REGISTRY}}
          username: ${{ secrets.REGISTRY_USERNAME }}
          password: ${{ secrets.REGISTRY_PASSWORD }}

      # TODO raise issue, throws error even if target challenge isn't deployable. ignore all errors for now
      - name: Deploy containers
        run: ctf challenge deploy --skip-login --host "kubernetes://${{ vars.KUBE_HOST }}?registry=${{ vars.REGISTRY }}" || true

      - name: Setup GitHub container registry
        uses: docker/login-action@9780b0c442fbb1117ed29e0efdff1e18412f7567 # v3.3.0
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ github.token }}

      - name: Push container images to GitHub
        run: |-
          images=$(docker images $REGISTRY/*:latest --format "{{.Repository}}")
          for image in $images; do
            lowercase=${GITHUB_REPOSITORY_OWNER,,}
            newtag=${image//$REGISTRY/ghcr\.io\/$lowercase}:latest
            docker tag $image:latest $newtag
            docker push $newtag
          done
        env:
          REGISTRY: ${{ vars.REGISTRY }}
